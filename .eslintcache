[{"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/index.js":"1","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/App.js":"2","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/reportWebVitals.js":"3","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/pages/LoginPage.js":"4","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/Register.js":"5","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/api/UserApi.js":"6","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/alerts/DefaultAlert.js":"7","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/pages/GardenPage.js":"8","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/Sky/Sky.js":"9","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/Ground/Ground.js":"10","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/Garden/Garden.js":"11","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/Garden/GardenPlot.js":"12","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/Garden/Plant.js":"13","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/images/images.js":"14","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/User Balance/UserBalance.js":"15"},{"size":500,"mtime":1609973387386,"results":"16","hashOfConfig":"17"},{"size":1286,"mtime":1610150917285,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1609973387387,"results":"19","hashOfConfig":"17"},{"size":2000,"mtime":1610123573401,"results":"20","hashOfConfig":"17"},{"size":2554,"mtime":1610123573398,"results":"21","hashOfConfig":"17"},{"size":1354,"mtime":1610140675540,"results":"22","hashOfConfig":"17"},{"size":532,"mtime":1610123573399,"results":"23","hashOfConfig":"17"},{"size":411,"mtime":1610124615653,"results":"24","hashOfConfig":"17"},{"size":585,"mtime":1610125971929,"results":"25","hashOfConfig":"17"},{"size":481,"mtime":1610124615646,"results":"26","hashOfConfig":"17"},{"size":2429,"mtime":1610124615645,"results":"27","hashOfConfig":"17"},{"size":747,"mtime":1610124615645,"results":"28","hashOfConfig":"17"},{"size":1023,"mtime":1610124615646,"results":"29","hashOfConfig":"17"},{"size":1606,"mtime":1610124615652,"results":"30","hashOfConfig":"17"},{"size":1677,"mtime":1610151114560,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"eliry1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/index.js",[],["66","67"],"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/App.js",["68"],"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/reportWebVitals.js",[],"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/pages/LoginPage.js",["69"],"import React, { useEffect, useState } from \"react\";\nimport \"./LoginPage.css\";\nimport {\n  FormControl,\n  TextField,\n  Typography,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport Register from \"../components/Register\";\n\nconst LoginPage = (props) => {\n  const [weather, setWeather] = useState(\"\");\n  console.log(props);\n  useEffect(() => {\n    fetch(\n      `https://community-open-weather-map.p.rapidapi.com/weather?q=${props.userCity}%2C${props.userState}%2CUSA&units=imperial`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"9787f1e58amshcbfb9f8a0dfd985p1cb905jsn7b1c9d802fc2\",\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        },\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((condition) => {\n        setWeather(condition.weather[0].main);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  });\n\n  return (\n    // grid container, holds grid items\n    <Grid container spacing={1} align=\"center\" className=\"container\">\n      <Grid item xs={12}>\n        <Typography component=\"h4\" variant=\"h4\">\n          Login\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl>\n          <TextField\n            required={true}\n            label=\"Username\"\n            placeholder=\"Username\"\n            variant=\"outlined\"\n          ></TextField>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl>\n          <TextField\n            required={true}\n            type=\"password\"\n            label=\"Password\"\n            placeholder=\"Password\"\n            variant=\"outlined\"\n          ></TextField>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <Button variant=\"contained\" color=\"primary\">\n          Login\n        </Button>\n      </Grid>\n      <Grid item xs={12}>\n        {/* register component */}\n        <Register />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default LoginPage;\n","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/Register.js",[],"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/api/UserApi.js",["70"],"const registerUser = (userInfo) => {\n  console.log(userInfo)\n  return fetch('http://localhost:8000/gardens/users/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userInfo)\n  })\n}\n\nconst login = async (userInfo) => {\n  console.log(userInfo)\n  try {\n    \n    let response = await fetch('http://localhost:8000/token-auth/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userInfo)\n    })\n    return response\n  }\n  catch(err) {\n    console.log(err)\n  }\n}\n\nconst currentUser = (token) => {\n  return fetch('http://localhost:8000/gardens/current_user/', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `JWT ${token}`\n    }\n  })\n}\n\nconst fetchUserBalanceByID = (userID) => {\n  return fetch(`http://127.0.0.1:8000/api/profile/${userID}`).then((response) => response.json())\n}\n\nconst addToBalanceByID = (userID, addedAmountObject) => {\n  return fetch(`http://127.0.0.1:8000/api/profile/${userID}/`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'PUT',\n    body: JSON.stringify(addedAmountObject)\n  }).then((response) => response.json())\n}\n\nexport default {\n  registerUser,\n  login,\n  currentUser,\n  fetchUserBalanceByID,\n  addToBalanceByID,\n}","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/alerts/DefaultAlert.js",[],"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/pages/GardenPage.js",[],"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/Sky/Sky.js",[],"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/Ground/Ground.js",[],"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/Garden/Garden.js",[],"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/Garden/GardenPlot.js",[],"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/Garden/Plant.js",["71","72"],"import React from 'react';\nimport getPlantDisplay from '../../images/images';\nimport gsap from 'gsap';\n\n\nconst Plant = (props) => {\n  // id of -1 means no image should be shown\n  // plantId corresponds to plant id from database.\n  const [plantId, setPlantId] = React.useState(-1);\n\n  const getGrowthStatus = (percentGrown) => {\n    if (percentGrown >= 100) return \"mature\";\n    else if (percentGrown >= 50) return \"growing\";\n    else if (percentGrown >= 20) return \"seedling\";\n    else return \"justPlanted\";\n  };\n\n  const animate = () => {\n    var tl = gsap.timeline({repeat: -1, yoyo: true})\n    tl.set(`#${props.id}`, {transformOrigin: \"50% 100%\"});\n    tl.from(`#${props.id}`, {duration: 1, scaleX:1.1, scaleY: .9});\n  };\n\n  React.useEffect(animate, [props.id]);\n\n  return (\n    <div>\n      {props.id ?\n        <img id={props.id} src={getPlantDisplay(props.plantId, getGrowthStatus(props.growthPercent))} alt=\"Flower\"/>\n        : \"Plants must have unique IDs in props.\"\n      }\n    </div>\n  );\n}\n\n\nexport default Plant;\n","/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/images/images.js",[],"/Users/aries/Mike-Platoon/Code-Challenges/group_project/garden_game_frontend/src/components/User Balance/UserBalance.js",["73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":17},{"ruleId":"78","severity":1,"message":"82","line":13,"column":10,"nodeType":"80","messageId":"81","endLine":13,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":54,"column":1,"nodeType":"85","endLine":60,"endColumn":2},{"ruleId":"78","severity":1,"message":"86","line":9,"column":10,"nodeType":"80","messageId":"81","endLine":9,"endColumn":17},{"ruleId":"78","severity":1,"message":"87","line":9,"column":19,"nodeType":"80","messageId":"81","endLine":9,"endColumn":29},{"ruleId":"78","severity":1,"message":"88","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":28},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'LoginPage' is defined but never used.","Identifier","unusedVar","'weather' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'plantId' is assigned a value but never used.","'setPlantId' is assigned a value but never used.","'fetchUserBalanceByID' is defined but never used.","no-global-assign","no-unsafe-negation"]